Description: [droidcamsrc] make deferred property set return true
 When a photograghic property is set, if the possible values has not been
 retrieved yet, droidcamsrcphotography will save the value and return
 FALSE. However, as the value is to be applied later, returning FALSE
 is misleading, as that means the action has no effect.
 .
 This patch make these deferred property set return TRUE, indicating that
 the value is set successfully. Also, the logging message is updated to
 indicate the defferred nature of it.
Author: Ratchanan Srirattanamet <ratchanan@ubports.com>
Forwarded: <URL|no|not-needed, useless if you have a Bug field, optional>
Last-Update: 2020-01-16
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/gst/droidcamsrc/gstdroidcamsrcphotography.c
+++ b/gst/droidcamsrc/gstdroidcamsrcphotography.c
@@ -227,11 +227,11 @@
   int x;								\
   int len = g_list_length (table);					\
   if (len == 0) {							\
-    GST_WARNING_OBJECT (src, "params for %s not yet available. not applying value %d yet", droid, val); \
+    GST_WARNING_OBJECT (src, "params for %s not yet available. deferred applying value %d", droid, val); \
     GST_OBJECT_LOCK (src);						\
     src->photo->settings.memb = val;					\
     GST_OBJECT_UNLOCK (src);						\
-    return FALSE;							\
+    return TRUE;							\
   }									\
 									\
   const gchar *value = NULL;						\
@@ -1236,11 +1236,12 @@
 
   if (len == 0 || src->photo->iso_key == NULL) {
     GST_DEBUG_OBJECT (src,
-        "params not yet fetched. not applying iso speed yet");
+        "params for iso speed not yet available. deferred applying value %u",
+        iso_speed);
     GST_OBJECT_LOCK (src);
     src->photo->settings.iso_speed = iso_speed;
     GST_OBJECT_UNLOCK (src);
-    return FALSE;
+    return TRUE;
   }
 
   for (x = 0; x < len; x++) {
@@ -1358,11 +1359,12 @@
 
   if (len == 0) {
     GST_DEBUG_OBJECT (src,
-        "params not yet fetched. not applying focus mode yet");
+        "params for focus mode not yet available. deferred applying value %d",
+        focus_mode);
     GST_OBJECT_LOCK (src);
     src->photo->settings.focus_mode = focus_mode;
     GST_OBJECT_UNLOCK (src);
-    return FALSE;
+    return TRUE;
   }
 
   const gchar *value = NULL;
