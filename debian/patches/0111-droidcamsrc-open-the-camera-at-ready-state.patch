Description: [droidcamsrc] open the camera at ready state
 Gstreamer's plugin development document [1] states that:
 .
 > In the READY state, an element has all default resources (runtime-
 > libraries, runtime-memory) allocated. ... Examples of such resources
 > are hardware devices.
 .
 Also, gstahc, a camerabin-compatible element for Android Camera API,
 opens camera at this state too. Thus, I think it made more sense to
 open camera at this state.
 .
 This makes parameters such as viewfinder's resolutions available
 sooner. As QtMultimedia's Gstreamer plugin set its pipeline to READY
 state for its Loaded state, this makes parameters available at this
 stage too. This enables apps to dynamically detect optimal viewfinder
 resolution sooner and avoid double-loading problem.
 .
 [1] https://gstreamer.freedesktop.org/documentation/plugin-development/basics/states.html
Author: Ratchanan Srirattanamet <ratchanan@ubports.com>
Forwarded: no
Last-Update: 2020-06-10
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/gst/droidcamsrc/gstdroidcamsrc.c
+++ b/gst/droidcamsrc/gstdroidcamsrc.c
@@ -619,7 +619,11 @@
   src = GST_DROIDCAMSRC (element);
 
   switch (transition) {
-    case GST_STATE_CHANGE_NULL_TO_READY:
+    case GST_STATE_CHANGE_NULL_TO_READY:{
+      GstDroidCamSrcCamInfo *info;
+      const GstDroidCamSrcQuirk *quirk;
+      gboolean quirk_is_property = FALSE;
+
       if (!gst_droidcamsrc_get_hw (src)) {
         ret = GST_STATE_CHANGE_FAILURE;
         break;
@@ -642,14 +646,6 @@
           gst_droidcamsrc_dev_new (src->vfsrc, src->imgsrc,
           src->vidsrc, &src->dev_lock);
 
-      break;
-
-    case GST_STATE_CHANGE_READY_TO_PAUSED:
-    {
-      GstDroidCamSrcCamInfo *info;
-      const GstDroidCamSrcQuirk *quirk;
-      gboolean quirk_is_property = FALSE;
-
       /* find the device */
       info = gst_droidcamsrc_find_camera_device (src);
 
@@ -694,7 +690,11 @@
       /* And we can also detect the supported image modes. In reality the only thing
          we are unable to detect until this moment is _ZSL_AND_HDR */
       g_object_notify (G_OBJECT (src), "supported-image-modes");
+    }
 
+      break;
+
+    case GST_STATE_CHANGE_READY_TO_PAUSED:
       /* Now add the needed orientation tag */
       gst_droidcamsrc_add_vfsrc_orientation_tag (src);
 
@@ -702,10 +702,7 @@
        * messages on the pipeline */
       gst_element_set_state (src->preview_pipeline->pipeline,
           GST_STATE_PLAYING);
-    }
-
       break;
-
     case GST_STATE_CHANGE_PAUSED_TO_PLAYING:
       /* set initial photography parameters */
       gst_droidcamsrc_photography_apply (src, SET_ONLY);
@@ -772,13 +769,12 @@
       break;
 
     case GST_STATE_CHANGE_PAUSED_TO_READY:
-      gst_droidcamsrc_dev_deinit (src->dev);
-      gst_droidcamsrc_dev_close (src->dev);
-
       gst_element_set_state (src->preview_pipeline->pipeline, GST_STATE_READY);
       break;
 
     case GST_STATE_CHANGE_READY_TO_NULL:
+      gst_droidcamsrc_dev_deinit (src->dev);
+      gst_droidcamsrc_dev_close (src->dev);
       gst_droidcamsrc_dev_destroy (src->dev);
       src->dev = NULL;
 
